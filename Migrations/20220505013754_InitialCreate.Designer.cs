// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using newWebAPI.Context;

#nullable disable

namespace newWebAPI.Migrations
{
    [DbContext(typeof(ApiAppContext))]
    [Migration("20220505013754_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("newWebAPI.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("23749a20-099d-44ea-bed8-c8279192883a"),
                            Active = true,
                            DateCreated = new DateTime(2022, 5, 4, 20, 37, 53, 973, DateTimeKind.Local).AddTicks(7037),
                            LastName = "Suarez",
                            Name = "San"
                        },
                        new
                        {
                            UserId = new Guid("c4ffad0d-f414-4ab6-b62e-d01cab7ef0f5"),
                            Active = true,
                            DateCreated = new DateTime(2022, 5, 4, 20, 37, 53, 973, DateTimeKind.Local).AddTicks(7052),
                            LastName = "Romero",
                            Name = "Juan"
                        });
                });

            modelBuilder.Entity("newWebAPI.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            UserRoleId = new Guid("45825bf4-457e-4d38-8fed-d271948b87df"),
                            Active = true,
                            Role = "Admin",
                            UserId = new Guid("23749a20-099d-44ea-bed8-c8279192883a")
                        },
                        new
                        {
                            UserRoleId = new Guid("693b25ad-12cf-495f-82f3-af07a70bb7c5"),
                            Active = true,
                            Role = "User",
                            UserId = new Guid("c4ffad0d-f414-4ab6-b62e-d01cab7ef0f5")
                        });
                });

            modelBuilder.Entity("newWebAPI.Models.UserRole", b =>
                {
                    b.HasOne("newWebAPI.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("newWebAPI.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
